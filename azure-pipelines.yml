# .NET Core
# Build and test .NET Core projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  feedName: 'Globe-UltraLocalizer'
  azureDevOpsProjectName: 'UltraLocalizer'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Build Globe.Identity'
  inputs:
    command: 'pack'
    arguments: --output $(build.artifactstagingdirectory) --configuration $(buildConfiguration)
    packagesToPack: 'Globe.Identity/Globe.Identity.csproj'
    versioningScheme: byPrereleaseNumber
    versionEnvVar: byPrereleaseNumber
    majorVersion: 0
    minorVersion: 1
    patchVersion: 0

- task: DotNetCoreCLI@2
  displayName: 'Build Globe.Infrastructure.EFCore'
  inputs:
    command: 'pack'
    arguments: --output $(build.artifactstagingdirectory) --configuration $(buildConfiguration)
    packagesToPack: 'Globe.Infrastructure.EFCore/Globe.Infrastructure.EFCore.csproj'
    versioningScheme: byPrereleaseNumber
    versionEnvVar: byPrereleaseNumber
    majorVersion: 0
    minorVersion: 1
    patchVersion: 0

- task: DotNetCoreCLI@2
  displayName: 'Build Globe.BusinessLogic'
  inputs:
    command: 'pack'
    arguments: --output $(build.artifactstagingdirectory) --configuration $(buildConfiguration)
    packagesToPack: 'Globe.BusinessLogic/Globe.BusinessLogic.csproj'
    versioningScheme: byPrereleaseNumber
    versionEnvVar: byPrereleaseNumber
    majorVersion: 0
    minorVersion: 1
    patchVersion: 0

- task: DotNetCoreCLI@2
  displayName: 'Push artifacts in $(azureDevOpsProjectName)/$(feedName) feed'
  inputs:
    command: 'push'
    nuGetFeedType: 'internal'
    packagesToPush: '$(build.artifactStagingDirectory)/*.nupkg'
    publishVstsFeed: '$(azureDevOpsProjectName)/$(feedName)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'